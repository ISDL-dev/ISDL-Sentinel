openapi: 3.0.0
info:
  title: ISDL Sentinel API
  version: 1.0.0
  license:
    name: MIT
servers:
- url: http://localhost:3000/v1
paths:
  /attendees-list:
    get:
      summary: Get attendees list
      operationId: get-attendees-list
      tags:
        - Attendees list
        - ISDL MAP
      responses:
        "200": 
          $ref: "#/components/responses/AttendeesList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status:
    put:
      summary: update status
      operationId: put-status
      tags:
        - Attendees list
      requestBody:
        description: request body of update status
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Status"
      responses:
        '200':
          description: successful to update status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Status"         
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /access-history/{month}:
    get:
      summary: Get access history
      operationId: get-access-history
      tags:
        - Access history
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/AccessHistory"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users:
    get:
      summary: Get a users info
      operationId: get-users-info
      tags:
        - Setting
      responses:
        "200":
          $ref: "#/components/responses/AllUserInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}:
    get:
      summary: Get a user by ID
      operationId: get-user-by-id
      tags:
        - Profile
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          $ref: "#/components/responses/UserInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Put a user by ID
      operationId: put-user-by-id
      tags:
        - Setting
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: uint64
      requestBody:
        description: request body of user info
        required: true
        $ref: '#/components/requestBodies/UserInformation'
      responses:
        "200":
          description: successful to update user info  
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /avatar:
    post:
      summary: Upload my avatar
      operationId: post-avatar
      tags:
        - Profile
      requestBody:
        description: request body of upload avatar
        required: true
        $ref: '#/components/requestBodies/UploadAvatar'
      responses:
        '200':
          description: successful to upload avatar      
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update my avatar
      operationId: put-avatar
      tags:
        - Profile
      requestBody:
        description: request body of update avatar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avatar'
      responses:
        '200':
          description: successful to update avatar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Avatar'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete my avatar
      operationId: delete-avatar
      tags:
        - Profile
      requestBody:
        description: request body of delete avatar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Avatar'
      responses:
        '200':
          description: successful to delete avatar
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ranking/{term}:
    get:
      summary: Get ranking
      operationId: get-ranking
      tags:
        - Ranking
      parameters:
        - in: path
          name: term
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/RankingList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lab-assistant-member:
    get:
      summary: Get lab assistant member
      operationId: get-lab-assistant-member
      tags:
        - LA
      responses:
        "200":
          $ref: "#/components/responses/LabAssistantMember"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /lab-assistant/{month}:
    get:
      summary: Get lab assistant schedule
      operationId: get-lab-assistant-schedule
      tags:
        - LA
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/LabAssistantSchedule"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Resister lab assistant schedule
      operationId: post-lab-assistant-schedule
      tags:
        - LA
      parameters:
        - in: path
          name: month
          required: true
          schema:
            type: string
      requestBody:
        description: request body of lab assistant
        required: true
        $ref: '#/components/requestBodies/LabAssistantSchedule'
      responses:
        '200':
          $ref: "#/components/responses/LabAssistantSchedule"           
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /role:
    get:
      summary: Get role name
      operationId: get-role-name
      tags:
        - Setting
      responses:
        "200":
          $ref: "#/components/responses/Role"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /sign-in:
    post:
      summary: Sign in
      operationId: post-sign-in
      tags:
        - Authentication
      requestBody:
        description: request body of sign in
        required: true
        $ref: '#/components/requestBodies/SignInUser'
      responses:
        '200':
          $ref: "#/components/responses/SignInUser"           
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /sign-up:
    post:
      summary: Create user information
      operationId: post-user-information
      tags:
        - Authentication
      requestBody:
        description: request body of sign up
        required: true
        $ref: '#/components/requestBodies/SignUpUser'
      responses:
        '201':
          $ref: "#/components/responses/SignInUser"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /grade:
    get:
      summary: Get grade name
      operationId: get-grade-name
      tags:
        - Authentication
      responses:
        "200":
          $ref: "#/components/responses/Grade"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /password/{user_id}:
    put:
      summary: Change password
      operationId: put-change-password
      tags:
        - Authentication
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: uint64
      requestBody:
        description: request body of change password
        required: true
        $ref: '#/components/requestBodies/Password'
      responses:
        '204':
          description: successful to sign in
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  requestBodies:
    UserInformation:
      content:
        application/json:
          schema:
            type: object
            properties:
              user_name:
                type: string
              mail_address:
                type: string
              grade:
                type: string
              role_list:
                type: array
                items:
                  type: string
            required:
              - user_name
              - mail_address
              - grade
              - role_list
    UploadAvatar:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              user_id:
                type: integer
              avatar_file:
                type: string
                format: binary
            required:
              - user_id
              - avatar_file
    LabAssistantSchedule:
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  format: uint64
                shift_date:
                  type: string
              required:
                - user_id
                - shift_date
    SignInUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              mail_address:
                type: string
              password:
                type: string
            required:
              - mail_address
              - password
    SignUpUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              auth_user_name:
                type: string
              mail_address:
                type: string
              password:
                type: string
              grade_name:
                type: string
            required:
              - name
              - auth_user_name
              - mail_address
              - password
              - grade_name
    Password:
      content:
        application/json:
          schema:
            type: object
            properties:
              before_password:
                type: string
              after_password:
                type: string
            required:
              - before_password
              - after_password
  responses:
    AttendeesList:
      description: successful to get attendees list
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  format: uint64
                user_name:
                  type: string
                entered_at:
                  type: string
                purpose:
                  type: string
                status:
                  type: string
                place:
                  type: string
                grade:
                  type: string
                avatar_id:
                  type: integer
                  format: uint64
                avatar_img_path:
                  type: string
              required:
                - user_id
                - user_name
                - entered_at
                - purpose
                - status
                - place
                - grade
                - avatar_id
                - avatar_img_path
    AccessHistory:
      description: Successful to get access-history
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                entering:
                  type: object
                  properties:
                    user_id:
                      type: integer
                      format: uint64
                    user_name:
                      type: string
                    avatar_id:
                      type: integer
                      format: uint64
                    avatar_img_path:
                      type: string
                    entered_at:
                      type: string
                  required:
                    - user_id
                    - user_name
                    - avatar_id
                    - avatar_img_path
                    - entered_at
                leaving:
                  type: object
                  properties:
                    user_id:
                      type: integer
                      format: uint64
                    user_name:
                      type: string
                    avatar_id:
                      type: integer
                      format: uint64
                    avatar_img_path:
                      type: string
                    left_at:
                      type: string
                  required:
                    - user_id
                    - user_name
                    - avatar_id
                    - avatar_img_path
                    - left_at
              required:
                - date
                - entering
                - leaving
    AllUserInformation:
      description: Successful to get all users info
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  format: uint64
                user_name:
                  type: string
                mail_address:
                  type: string
                grade:
                  type: string
                role_list:
                  type: array
                  items:
                    type: string
                avatar_id:
                  type: integer
                  format: uint64
                avatar_img_path:
                  type: string
              required:
                - user_id
                - user_name
                - mail_address
                - grade
                - role_list
                - avatar_id
                - avatar_img_path
    UserInformation:
      description: Successful to get a user by ID
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: integer
                format: uint64
              user_name:
                type: string
              mail_address:
                type: string
              number_of_coin:
                type: integer
                format: uint64
              attendance_days:
                type: integer
                format: uint64
              stay_time:
                type: string
              status:
                type: string
              place:
                type: string
              grade:
                type: string
              role_list:
                type: array
                items:
                  type: string
              avatar_id:
                type: integer
                format: uint64
              avatar_img_path:
                type: string
              avatar_list:
                type: array
                items:
                  type: object
                  properties:
                    avatar_id:
                      type: integer
                      format: uint64
                    img_path:
                      type: string
                  required:
                    - avatar_id
                    - img_path
            required:
              - user_id
              - user_name
              - mail_address
              - number_of_coin
              - attendance_days
              - stay_time
              - status
              - place
              - grade
              - role_list
              - avatar_id
              - avatar_img_path
              - avatar_list
    RankingList:
      description: Successful to get ranking
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  format: uint64
                user_name:
                  type: string
                attendance_days:
                  type: integer
                  format: uint64
                stay_time:
                  type: string
                grade:
                  type: string
                avatar_id:
                  type: integer
                  format: uint64
                avatar_img_path:
                  type: string
              required:
                - user_id
                - user_name
                - attendance_days
                - stay_time
                - grade
                - avatar_id
                - avatar_img_path
    LabAssistantMember:
      description: Successful to get lab assistant member
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_id:
                  type: integer
                  format: uint64
                user_name:
                  type: string
                avatar_id:
                  type: integer
                  format: uint64
                avatar_img_path:
                  type: string
                last_shift_date:
                  type: string
                count:
                  type: integer
                  format: uint64
              required:
                - user_id
                - user_name
                - avatar_id
                - avatar_img_path
                - last_shift_date
                - count
    LabAssistantSchedule:
      description: Successful to get lab assistant schedule
      content:
        application/json:
          schema:
            type: array
            items:
              type: object
              properties:
                user_name:
                  type: string
                shift_date:
                  type: string
              required:
                - user_name
                - shift_date
    SignInUser:
      description: successful to sign in
      content:
        application/json:
          schema:
            type: object
            properties:
              user_id:
                type: integer
                format: uint64
              user_name:
                type: string
              status:
                type: string
              role_list:
                type: array
                items:
                  type: string
              avatar_id:
                type: integer
                format: uint64
              avatar_img_path:
                type: string
            required:
              - user_id
              - user_name
              - status
              - role_list
              - avatar_id
              - avatar_img_path
    Grade:
      description: successful to get grade name
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
    Role:
      description: successful to get role name
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
  schemas:
    Status:
      type: object
      properties:
        user_id:
          type: integer
          format: uint64
        status:
          type: string
      required:
        - user_id
        - status
    Avatar:
      type: object
      properties:
        user_id:
          type: integer
          format: uint64
        avatar_id:
          type: integer
          format: uint64
      required:
        - user_id
        - avatar_id
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message