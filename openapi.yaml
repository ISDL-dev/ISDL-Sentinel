openapi: 3.0.0
info:
  title: ISDL Sentinel API
  version: 1.0.0
  license:
    name: MIT
servers:
- url: http://localhost:3000/v1
paths:
  /attendees-list:
    get:
      summary: Get attendees list
      operationId: get-attendees-list
      tags:
        - get-attendees-list
      responses:
        "200":
          description: Successful to get attendees list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttendeesList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{user_id}:
    get:
      summary: Get a user by ID
      operationId: get-user-by-id
      tags:
        - get-user-by-id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: Successful to get a user by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /ranking:
    get:
      summary: Get ranking
      operationId: get-ranking
      tags:
        - get-ranking
      responses:
        "200":
          description: Successful to get ranking
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RankingList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /avatar/{count}:
    get:
      summary: Get an avatar by ID
      operationId: get-avatar-by-id
      tags:
        - get-avatar-by-id
      parameters:
        - in: path
          name: count
          required: true
          schema:
            type: integer
            format: uint64
      responses:
        "200":
          description: Successful to get an avatar by ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvatarInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /avatar-list:
    get:
      summary: Get avatar list
      operationId: get-avatar-list
      tags:
        - get-avatar-list
      responses:
        "200":
          description: Successful to get avatar-list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AvatarInformation"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /sign-in:
    post:
      summary: Sign in
      operationId: post-sign-in
      tags:
        - post-sign-in
      requestBody:
        description: request body of sign in
        required: true
        $ref: '#/components/requestBodies/SignInUser'
      responses:
        '200':
          description: successful to sign in
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /sign-up:
    post:
      summary: Create user information
      operationId: post-user-information
      tags:
        - post-user-information
      requestBody:
        description: request body of sign up
        required: true
        $ref: '#/components/requestBodies/SignUpUser'
      responses:
        '200':
          description: successful to sign in
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /password:
    put:
      summary: change password
      operationId: put-change-password
      tags:
        - put-change-password
      requestBody:
        description: request body of change password
        required: true
        $ref: '#/components/requestBodies/Password'
      responses:
        '200':
          description: successful to sign in
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  requestBodies:
    SignInUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              mail_address:
                type: string
              password:
                type: string
    SignUpUser:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              mail_address:
                type: string
              password:
                type: string
    Password:
      content:
        application/json:
          schema:
            type: object
            properties:
              mail_address:
                type: string
              before_password:
                type: string
              after_password:
                type: string
  schemas:
    AttendeesList:
      type: array
      items:
        type: object
        properties:
          user_id:
            type: integer
            format: uint64
          user_name:
            type: string
          entered_at:
            type: string
          purpose:
            type: string
          status:
            type: string
          place:
            type: string
          grade:
            type: string
          avatar:
            type: string
    UserInformation:
      type: object
      properties:
        user_id:
          type: integer
          format: uint64
        user_name:
          type: string
        mail_address:
          type: string
        number_of_coin:
          type: integer
          format: uint64
        attendance_days:
          type: integer
          format: uint64
        stay_time:
          type: string
        status:
          type: string
        place:
          type: string
        grade:
          type: string
        avatar:
          type: string
        avatar_list:
          type: array
          items:
            type: object
            properties:
              avatar_id:
                type: integer
                format: uint64
              avatar_name:
                type: string
              rarity:
                type: integer
                format: uint64
              img_path:
                type: string
    RankingList:
      type: array
      items:
        type: object
        properties:
          user_id:
            type: integer
            format: uint64
          user_name:
            type: string
          stay_time:
            type: string
          grade:
            type: string
          avatar:
            type: string
    AvatarInformation:
      type: array
      items:
        type: object
        properties:
          avatar_id:
            type: integer
            format: uint64
          avatar_name:
            type: string
          rarity:
            type: integer
            format: uint64
          img_path:
            type: string
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
      - code
      - message