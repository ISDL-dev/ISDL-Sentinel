version: "3"

services:
  frontend:
    container_name: isdl-sentinel-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: ${ENV_TYPE:-dev}
      args:
        - ENV_TYPE=${ENV_TYPE:-dev}
        - BACKEND_ENDPOINT=${BACKEND_ENDPOINT}
    env_file:
      - .env.${ENV_TYPE:-dev}
    tty: true
    stdin_open: true
    volumes:
      - ./frontend:/app
    ports:
      - 4000:4000
    networks:
      - isdl-sentinel

  backend:
    container_name: isdl-sentinel-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: ${ENV_TYPE:-dev}
      args:
        - ENV_TYPE=${ENV_TYPE:-dev}
    env_file:
      - .env.${ENV_TYPE:-dev}
    environment:
      - ENV_TYPE=${ENV_TYPE:-dev}
    tty: true
    stdin_open: true
    volumes:
      - ./backend:/go/src/app
    ports:
      - 3000:3000
    networks:
      - isdl-sentinel

  database:
    image: mysql:8.0
    container_name: ${MYSQL_HOSTNAME}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TZ}
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    tty: true
    stdin_open: true
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./database/sqls_${ENV_TYPE:-dev}:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - isdl-sentinel

  nginx:
    image: nginx:latest
    container_name: isdl-sentinel-nginx
    ports:
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - isdl-sentinel

networks:
  isdl-sentinel:
    name: isdl-sentinel

volumes:
  mysql_data:
    name: isdl_sentinel_data_${ENV_TYPE:-dev}
